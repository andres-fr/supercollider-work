import numpy as np
import matplotlib.pyplot as plt

def plot(nparr, label="show"):
    plt.plot(nparr)
    plt.ylabel(label)
    plt.show()

############
### ORIGINAL: energy=7.037, max_energy=11.0223
############
test_orig= np.array([-0.999969, -0.888855, -0.77774, -0.666656, -0.555542, -0.444427, -0.333313, -0.222229, -0.111115, 0, 0.111115, 0.222229, 0.333313, 0.444427, 0.555542, 0.666656, 0.77774, 0.888855, 0.999969])

############
### MATERIALS
############
test_m1= np.array([0.999969])

test_m2= np.array([-0.999969, 0.999969])

test_orig= np.array([-0.999969, -0.888855, -0.77774, -0.666656, -0.555542, -0.444427, -0.333313, -0.222229, -0.111115, 0, 0.111115, 0.222229, 0.333313, 0.444427, 0.555542, 0.666656, 0.77774, 0.888855, 0.999969])

_31line= np.array([-0.999969, -0.933319, -0.866638, -0.799988, -0.733307, -0.666656,
            -0.599976, -0.533325, -0.466644, -0.399994, -0.333313, -0.266663, -0.199982, -0.133331, -0.0666504, 0, 0.0666504, 0.133331, 0.199982, 0.266663, 0.333313, 0.399994, 0.466644, 0.533325, 0.599976, 0.666656, 0.733307, 0.799988, 0.866638, 0.933319, 0.999969])

############
### CCS
############
cc_original_m0= np.array([-0.0907288, -0.0806274, -0.0705566, -0.0604858, -0.050415, -0.0403137, -0.0302429, -0.0201721, -0.0100708, 0, 0.0100708, 0.0201721, 0.0302429, 0.0403137, 0.050415, 0.0604858, 0.0705566, 0.0806274, 0.0907288])
cc_original_m1= np.array([-0.0907288, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, -0.0907288])
cc_original_m2= np.array([-0.0907288, -0.161285, -0.212799, -0.246399, -0.263214, -0.264313, -0.250885, -0.223999, -0.184814, -0.134399, -0.0739136, -0.00448608, 0.0728149, 0.156799, 0.246399, 0.340485, 0.437927, 0.537598, 0.638428, 0.537598, 0.437927, 0.340485, 0.246399, 0.156799, 0.0728149, -0.00448608, -0.0739136, -0.134399, -0.184814, -0.223999, -0.250885, -0.264313, -0.263214, -0.246399, -0.212799, -0.161285, -0.0907288])
cc_original_m3= np.array([-0.0907288, -0.165314, -0.224457, -0.268799, -0.299042, -0.315857, -0.319885, -0.311829, -0.292328, -0.262085, -0.221771, -0.172028, -0.113556, -0.0470276, 0.026886, 0.107513, 0.194214, 0.286285, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.286285, 0.194214, 0.107513, 0.026886, -0.0470276, -0.113556, -0.172028, -0.221771, -0.262085, -0.292328, -0.311829, -0.319885, -0.315857, -0.299042, -0.268799, -0.224457, -0.165314, -0.0907288])

############
### CCM
############
cc_m0_m0= np.array([0.0907288])
cc_m0_m1= np.array([0.0907288, -0.0907288])
cc_m0_m2= np.array([0.0907288, 0.0806274, 0.0705566, 0.0604858, 0.050415, 0.0403137, 0.0302429, 0.0201721, 0.0100708, 0, -0.0100708, -0.0201721, -0.0302429, -0.0403137, -0.050415, -0.0604858, -0.0705566, -0.0806274, -0.0907288])
cc_m0_m3= np.array([0.0907288, 0.0846863, 0.0786133, 0.0725708, 0.0665283, 0.0604858, 0.0544434, 0.0483704, 0.0423279, 0.0362854, 0.0302429, 0.0242004, 0.018158, 0.012085, 0.00604248, 0, -0.00604248, -0.012085, -0.018158, -0.0242004, -0.0302429, -0.0362854, -0.0423279, -0.0483704, -0.0544434, -0.0604858, -0.0665283, -0.0725708, -0.0786133, -0.0846863, -0.0907288])
cc_m1_m1= np.array([-0.0907288, 0.181458, -0.0907288])
cc_m1_m2= np.array([-0.0907288, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, 0.0100708, -0.0907288])
cc_m1_m3= np.array([-0.0907288, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, 0.00604248, -0.0907288])
cc_m2_m2= np.array([-0.0907288, -0.161285, -0.212799, -0.246399, -0.263214, -0.264313, -0.250885, -0.223999, -0.184814, -0.134399, -0.0739136, -0.00448608, 0.0728149, 0.156799, 0.246399, 0.340485, 0.437927, 0.537598, 0.638428, 0.537598, 0.437927, 0.340485, 0.246399, 0.156799, 0.0728149, -0.00448608, -0.0739136, -0.134399, -0.184814, -0.223999, -0.250885, -0.264313, -0.263214, -0.246399, -0.212799, -0.161285, -0.0907288])
cc_m2_m3= np.array([-0.0907288, -0.165314, -0.224457, -0.268799, -0.299042, -0.315857, -0.319885, -0.311829, -0.292328, -0.262085, -0.221771, -0.172028, -0.113556, -0.0470276, 0.026886, 0.107513, 0.194214, 0.286285, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.383057, 0.286285, 0.194214, 0.107513, 0.026886, -0.0470276, -0.113556, -0.172028, -0.221771, -0.262085, -0.292328, -0.311829, -0.319885, -0.315857, -0.299042, -0.268799, -0.224457, -0.165314, -0.0907288])
cc_m3_m3= np.array([-0.0907288, -0.169342, -0.236298, -0.291931, -0.33667, -0.370972, -0.395142, -0.409668, -0.414917, -0.411285, -0.39917, -0.379028, -0.351196, -0.316132, -0.27417, -0.2258, -0.171356, -0.111298, -0.0459595, 0.0242004, 0.0987854, 0.177399, 0.259674, 0.345154, 0.433441, 0.52417, 0.616913, 0.711273, 0.806824, 0.903198, 0.999969, 0.903198, 0.806824, 0.711273, 0.616913, 0.52417, 0.433441, 0.345154, 0.259674, 0.177399, 0.0987854, 0.0242004, -0.0459595, -0.111298, -0.171356, -0.2258, -0.27417, -0.316132, -0.351196, -0.379028, -0.39917, -0.411285, -0.414917, -0.409668, -0.395142, -0.370972, -0.33667, -0.291931, -0.236298, -0.169342, -0.0907288])






# CrossCorrelator cc(ORIGINAL_NAME, MATERIAL_PATHS, WORKING_DIR);
# DoubleSignal s100(AUDIO_DIR+ORIGINAL_NAME, false);
# s100.prettyPrint(ORIGINAL_NAME);
# DoubleSignal s101(AUDIO_DIR+MATERIAL_PATHS[0], false);
# s101.prettyPrint(MATERIAL_PATHS[0]);
# DoubleSignal s102(AUDIO_DIR+MATERIAL_PATHS[1], false);
# s102.prettyPrint(MATERIAL_PATHS[1]);
# DoubleSignal s103(AUDIO_DIR+MATERIAL_PATHS[2], false);
# s103.prettyPrint(MATERIAL_PATHS[2]);
# DoubleSignal s104(AUDIO_DIR+MATERIAL_PATHS[3], false);
# s104.prettyPrint(MATERIAL_PATHS[3]);
# DoubleSignal s0(ANALYSIS_DIR+"cc_original_m0.wav", false);
# s0.prettyPrint("cc_original_m0.wav");
# DoubleSignal s1(ANALYSIS_DIR+"cc_original_m1.wav", false);
# s1.prettyPrint("cc_original_m1.wav");
# DoubleSignal s2(ANALYSIS_DIR+"cc_original_m2.wav", false);
# s2.prettyPrint("cc_original_m.wav");
# DoubleSignal s3(ANALYSIS_DIR+"cc_original_m3.wav", false);
# s3.prettyPrint("cc_original_m3.wav");
# DoubleSignal s4(ANALYSIS_DIR+"cc_m0_m0.wav", false);
# s4.prettyPrint("cc_m0_m0.wav");
# DoubleSignal s5(ANALYSIS_DIR+"cc_m0_m1.wav", false);
# s5.prettyPrint("cc_m0_m1.wav");
# DoubleSignal s6(ANALYSIS_DIR+"cc_m0_m2.wav", false);
# s6.prettyPrint("cc_m0_m2.wav");
# DoubleSignal s7(ANALYSIS_DIR+"cc_m0_m3.wav", false);
# s7.prettyPrint("cc_m0_m3.wav");
# DoubleSignal s8(ANALYSIS_DIR+"cc_m1_m1.wav", false);
# s8.prettyPrint("cc_m1_m1.wav");
# DoubleSignal s9(ANALYSIS_DIR+"cc_m1_m2.wav", false);
# s9.prettyPrint("cc_m1_m2.wav");
# DoubleSignal s10(ANALYSIS_DIR+"cc_m1_m3.wav", false);
# s10.prettyPrint("cc_m1_m3.wav");
# DoubleSignal s11(ANALYSIS_DIR+"cc_m2_m2.wav", false);
# s11.prettyPrint("cc_m2_m2.wav");
# DoubleSignal s12(ANALYSIS_DIR+"cc_m2_m3.wav", false);
# s12.prettyPrint("cc_m2_m3.wav");
# DoubleSignal s13(ANALYSIS_DIR+"cc_m3_m3.wav", false);
# s13.prettyPrint("cc_m3_m3.wav");
